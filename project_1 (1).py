# -*- coding: utf-8 -*-
"""Project 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LL4kwN2UYOETvzoVCc2XjZRcGZKOONVH
"""

# Author: Mariyah Shahmalak

# Conversion Options
conversions = """
*** Number Converter ***
CHOOSE 1 - to convert from DECIMAL to HEXADECIMAL
CHOOSE 2 - to convert from HEXADECIMAL to DECIMAL
CHOOSE 3 - to convert from DECIMAL to OCTAL
CHOOSE 4 - to convert from OCTAL to DECIMAL
CHOOSE 5 - to convert from DECIMAL to BINARY
CHOOSE 6 - to convert from BINARY to DECIMAL
CHOOSE 7 - to convert from OCTAL to BINARY
CHOOSE 8 - to convert from GALLONS to LITERS
CHOOSE 9 - to convert from LITERS to GALLONS
CHOOSE x to exit
"""
print(conversions)

# Function to validate input number for decimal values
def validate_number(input_value):
    try:
        value = int(input_value)
        if 0 <= value <= 2048:
            return value
        else:
            print('Value must be between 0 and 2048.')
            return None
    except ValueError:
        print('Invalid input. Please enter a number.')
        return None

# Function to validate general numeric input (for gallons and liters)
def validate_float(input_value):
    try:
        value = float(input_value)
        return value
    except ValueError:
        print('Invalid input. Please enter a number.')
        return None

# Action to be taken according to conversion choice
while True:
    choice = input('What would you like to do: ')

    if choice == 'x':
        print('Exiting...')
        break

    # Decimal to Hexadecimal
    elif choice == '1':
        one = input('Enter the DECIMAL number you would like to convert to HEXADECIMAL: ')
        one = validate_number(one)
        if one is not None:
            hex_digits = "0123456789ABCDEF"
            hexadecimal = ""
            original_decimal = one
            if one == 0:
                hexadecimal = "0"
            else:
                while one > 0:
                    remainder = one % 16
                    hexadecimal = hex_digits[remainder] + hexadecimal
                    one = one // 16
            print(f'Decimal (base - 10): {original_decimal}')
            print(f'Hexadecimal (base - 16): 0x{hexadecimal}')

    # Hexadecimal to Decimal
    elif choice == '2':
        two = input('Enter the HEXADECIMAL number you would like to convert to DECIMAL: ').upper()
        try:
            hex_digits = "0123456789ABCDEF"
            decimal = 0
            power = 0
            for i in two[::-1]:
                decimal += hex_digits.index(i) * (16 ** power)
                power += 1
            print(f'Hexadecimal (base - 16): 0x{two}')
            print(f'Decimal (base - 10): {decimal}')
        except ValueError:
            print('Invalid hexadecimal number.')

    # Decimal to Octal
    elif choice == '3':
        three = input('Enter the DECIMAL number you would like to convert to OCTAL: ')
        three = validate_number(three)
        if three is not None:
            octal = ""
            original_decimal = three
            if three == 0:
                octal = "0"
            else:
                while three > 0:
                    remainder = three % 8
                    octal = str(remainder) + octal
                    three = three // 8
            print(f'Decimal (base - 10): {original_decimal}')
            print(f'Octal (base - 8): 0{octal}')

    # Octal to Decimal
    elif choice == '4':
        four = input('Enter the OCTAL number you would like to convert to DECIMAL: ')
        try:
            decimal = 0
            power = 0
            for i in four[::-1]:
                decimal += int(i) * (8 ** power)
                power += 1
            print(f'Octal (base - 8): 0{four}')
            print(f'Decimal (base - 10): {decimal}')
        except ValueError:
            print('Invalid octal number.')

    # Decimal to Binary
    elif choice == '5':
        five = input('Enter the DECIMAL number you would like to convert to BINARY (0-2048): ')
        five = validate_number(five)
        if five is not None:
            binary = ""
            original_decimal = five
            if five == 0:
                binary = "0"
            else:
                while five > 0:
                    remainder = five % 2
                    binary = str(remainder) + binary
                    five = five // 2
            print(f'Decimal (base - 10): {original_decimal}')
            print(f'Binary (base - 2): {binary}')

    # Binary to Decimal
    elif choice == '6':
        six = input('Enter the BINARY number you would like to convert to DECIMAL: ')
        try:
            decimal = 0
            power = 0
            for i in six[::-1]:
                decimal += int(i) * (2 ** power)
                power += 1
            print(f'Binary (base - 2): {six}')
            print(f'Decimal (base - 10): {decimal}')
        except ValueError:
            print('Invalid binary number.')

    # Octal to Binary
    elif choice == '7':
        octal_num = input('Enter the OCTAL number you would like to convert to BINARY: ')
        try:
            decimal = 0
            power = 0
            for digit in octal_num[::-1]:
                decimal += int(digit) * (8 ** power)
                power += 1
            binary = ""
            while decimal > 0:
                remainder = decimal % 2
                binary = str(remainder) + binary
                decimal = decimal // 2
            print(f'Octal (base - 8): 0{octal_num}')
            print(f'Binary (base - 2): {binary}')
        except ValueError:
            print('Invalid octal number.')

    # Gallons to Liters
    elif choice == '8':
        gallons = input('Enter the number of GALLONS you would like to convert to LITERS: ')
        gallons = validate_float(gallons)
        if gallons is not None:
            liters = gallons * 3.78541
            print(f'Gallons: {gallons}')
            print(f'Liters: {liters:.2f}')

    # Liters to Gallons
    elif choice == '9':
        liters = input('Enter the number of LITERS you would like to convert to GALLONS: ')
        liters = validate_float(liters)
        if liters is not None:
            gallons = liters / 3.78541
            print(f'Liters: {liters}')
            print(f'Gallons: {gallons:.2f}')

    else:
        print('Invalid Choice!')
        print(conversions)